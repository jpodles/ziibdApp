// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ziibdApp.Models;

namespace ziibdApp.Migrations
{
    [DbContext(typeof(ModelContext))]
    partial class ModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ZIIBD9")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.DEPARTMENTS_SEQ", "'DEPARTMENTS_SEQ', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.EMPLOYEES_SEQ", "'EMPLOYEES_SEQ', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.LOCATIONS_SEQ", "'LOCATIONS_SEQ', '', '1', '1', '', '', 'Int64', 'False'");

            modelBuilder.Entity("ziibdApp.Models.Countries", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnName("COUNTRY_ID")
                        .HasColumnType("CHAR(2)");

                    b.Property<string>("CountryName")
                        .HasColumnName("COUNTRY_NAME")
                        .HasColumnType("VARCHAR2(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<decimal?>("RegionId")
                        .HasColumnName("REGION_ID")
                        .HasColumnType("NUMBER");

                    b.HasKey("CountryId")
                        .HasName("COUNTRY_C_ID_PK");

                    b.HasIndex("RegionId");

                    b.ToTable("COUNTRIES");
                });

            modelBuilder.Entity("ziibdApp.Models.Departments", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnName("DEPARTMENT_ID")
                        .HasColumnType("NUMBER(6)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnName("DEPARTMENT_NAME")
                        .HasColumnType("VARCHAR2(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("LocationId")
                        .HasColumnName("LOCATION_ID")
                        .HasColumnType("NUMBER(6)");

                    b.Property<int?>("ManagerId")
                        .HasColumnName("MANAGER_ID")
                        .HasColumnType("NUMBER(6)");

                    b.HasKey("DepartmentId")
                        .HasName("DEPT_ID_PK");

                    b.HasIndex("LocationId")
                        .HasName("DEPT_LOCATION_IX");

                    b.HasIndex("ManagerId");

                    b.ToTable("DEPARTMENTS");
                });

            modelBuilder.Entity("ziibdApp.Models.Employees", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnName("EMPLOYEE_ID")
                        .HasColumnType("NUMBER(6)");

                    b.Property<decimal?>("CommissionPct")
                        .HasColumnName("COMMISSION_PCT")
                        .HasColumnType("NUMBER(2,2)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DEPARTMENT_ID")
                        .HasColumnType("NUMBER(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("VARCHAR2(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasColumnName("FIRST_NAME")
                        .HasColumnType("VARCHAR2(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("HireDate")
                        .HasColumnName("HIRE_DATE")
                        .HasColumnType("DATE");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnName("JOB_ID")
                        .HasColumnType("VARCHAR2(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LAST_NAME")
                        .HasColumnType("VARCHAR2(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<int?>("ManagerId")
                        .HasColumnName("MANAGER_ID")
                        .HasColumnType("NUMBER(6)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONE_NUMBER")
                        .HasColumnType("VARCHAR2(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("Salary")
                        .HasColumnName("SALARY")
                        .HasColumnType("NUMBER(8,2)");

                    b.HasKey("EmployeeId")
                        .HasName("EMP_EMP_ID_PK");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("EMP_EMAIL_UK");

                    b.HasIndex("JobId")
                        .HasName("EMP_JOB_IX");

                    b.HasIndex("ManagerId")
                        .HasName("EMP_MANAGER_IX");

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("ziibdApp.Models.JobGrades", b =>
                {
                    b.Property<string>("GradeLevel")
                        .HasColumnName("GRADE_LEVEL")
                        .HasColumnType("VARCHAR2(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<decimal?>("HighestSal")
                        .HasColumnName("HIGHEST_SAL")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("LowestSal")
                        .HasColumnName("LOWEST_SAL")
                        .HasColumnType("NUMBER");

                    b.ToTable("JOB_GRADES");
                });

            modelBuilder.Entity("ziibdApp.Models.JobHistory", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnName("EMPLOYEE_ID")
                        .HasColumnType("NUMBER(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("START_DATE")
                        .HasColumnType("DATE");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DEPARTMENT_ID")
                        .HasColumnType("NUMBER(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("END_DATE")
                        .HasColumnType("DATE");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnName("JOB_ID")
                        .HasColumnType("VARCHAR2(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("EmployeeId", "StartDate")
                        .HasName("JHIST_EMP_ID_ST_DATE_PK");

                    b.HasIndex("DepartmentId")
                        .HasName("JHIST_DEPARTMENT_IX");

                    b.HasIndex("EmployeeId")
                        .HasName("JHIST_EMPLOYEE_IX");

                    b.HasIndex("JobId")
                        .HasName("JHIST_JOB_IX");

                    b.ToTable("JOB_HISTORY");
                });

            modelBuilder.Entity("ziibdApp.Models.Jobs", b =>
                {
                    b.Property<string>("JobId")
                        .HasColumnName("JOB_ID")
                        .HasColumnType("VARCHAR2(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnName("JOB_TITLE")
                        .HasColumnType("VARCHAR2(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<int?>("MaxSalary")
                        .HasColumnName("MAX_SALARY")
                        .HasColumnType("NUMBER(6)");

                    b.Property<int?>("MinSalary")
                        .HasColumnName("MIN_SALARY")
                        .HasColumnType("NUMBER(6)");

                    b.HasKey("JobId")
                        .HasName("JOB_ID_PK");

                    b.ToTable("JOBS");
                });

            modelBuilder.Entity("ziibdApp.Models.Locations", b =>
                {
                    b.Property<int>("LocationId")
                        .HasColumnName("LOCATION_ID")
                        .HasColumnType("NUMBER(6)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("CITY")
                        .HasColumnType("VARCHAR2(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("CountryId")
                        .HasColumnName("COUNTRY_ID")
                        .HasColumnType("CHAR(2)");

                    b.Property<string>("PostalCode")
                        .HasColumnName("POSTAL_CODE")
                        .HasColumnType("VARCHAR2(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("StateProvince")
                        .HasColumnName("STATE_PROVINCE")
                        .HasColumnType("VARCHAR2(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("StreetAddress")
                        .HasColumnName("STREET_ADDRESS")
                        .HasColumnType("VARCHAR2(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("LocationId")
                        .HasName("LOC_ID_PK");

                    b.HasIndex("City")
                        .HasName("LOC_CITY_IX");

                    b.HasIndex("CountryId")
                        .HasName("LOC_COUNTRY_IX");

                    b.HasIndex("StateProvince")
                        .HasName("LOC_STATE_PROVINCE_IX");

                    b.ToTable("LOCATIONS");
                });

            modelBuilder.Entity("ziibdApp.Models.Regions", b =>
                {
                    b.Property<decimal>("RegionId")
                        .HasColumnName("REGION_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("RegionName")
                        .HasColumnName("REGION_NAME")
                        .HasColumnType("VARCHAR2(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("RegionId")
                        .HasName("REG_ID_PK");

                    b.ToTable("REGIONS");
                });

            modelBuilder.Entity("ziibdApp.Models.Countries", b =>
                {
                    b.HasOne("ziibdApp.Models.Regions", "Region")
                        .WithMany("Countries")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("COUNTR_REG_FK");
                });

            modelBuilder.Entity("ziibdApp.Models.Departments", b =>
                {
                    b.HasOne("ziibdApp.Models.Locations", "Location")
                        .WithMany("Departments")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("DEPT_LOC_FK");

                    b.HasOne("ziibdApp.Models.Employees", "Manager")
                        .WithMany("Departments")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("DEPT_MGR_FK");
                });

            modelBuilder.Entity("ziibdApp.Models.Employees", b =>
                {
                    b.HasOne("ziibdApp.Models.Departments", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("EMP_DEPT_FK");

                    b.HasOne("ziibdApp.Models.Jobs", "Job")
                        .WithMany("Employees")
                        .HasForeignKey("JobId")
                        .HasConstraintName("EMP_JOB_FK")
                        .IsRequired();

                    b.HasOne("ziibdApp.Models.Employees", "Manager")
                        .WithMany("InverseManager")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("EMP_MANAGER_FK");
                });

            modelBuilder.Entity("ziibdApp.Models.JobHistory", b =>
                {
                    b.HasOne("ziibdApp.Models.Departments", "Department")
                        .WithMany("JobHistory")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("JHIST_DEPT_FK");

                    b.HasOne("ziibdApp.Models.Employees", "Employee")
                        .WithMany("JobHistory")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("JHIST_EMP_FK")
                        .IsRequired();

                    b.HasOne("ziibdApp.Models.Jobs", "Job")
                        .WithMany("JobHistory")
                        .HasForeignKey("JobId")
                        .HasConstraintName("JHIST_JOB_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("ziibdApp.Models.Locations", b =>
                {
                    b.HasOne("ziibdApp.Models.Countries", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("LOC_C_ID_FK");
                });
#pragma warning restore 612, 618
        }
    }
}
